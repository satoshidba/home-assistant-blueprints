blueprint:
  name: Dog Feeding Reminder
  description: Notify when the dog needs to be fed twice a day.
  domain: automation
  input:
    morning_time:
      name: Morning Feed Deadline
      default: '11:00:00'
      selector:
        time:
    evening_time:
      name: Evening Feed Deadline
      default: '20:00:00'
      selector:
        time:
    notify_device:
      name: Notification Device
      selector:
        device:
          integration: mobile_app

variables:
  last_fed: "{{ states('input_datetime.last_fed') }}"

trigger:
  - platform: time
    at: !input morning_time
  - platform: time
    at: !input evening_time
  - platform: event
    event_type: tag_scanned

condition:
  - condition: template
    value_template: >
      {% set current_time = now().time() %}
      {% set last_fed_time = as_timestamp(last_fed) %}
      {% set morning_feed_time = strptime(morning_time, '%H:%M:%S').time() %}
      {% set evening_feed_time = strptime(evening_time, '%H:%M:%S').time() %}
      {{ (trigger.platform == 'time' and current_time == morning_feed_time and last_fed_time < as_timestamp(now().replace(hour=11, minute=0, second=0))) or
         (trigger.platform == 'time' and current_time == evening_feed_time and last_fed_time < as_timestamp(now().replace(hour=20, minute=0, second=0))) or
         (trigger.platform == 'event' and trigger.event.event_type == 'tag_scanned') }}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'time' and now().time() == strptime(morning_time, '%H:%M:%S').time() }}"
        sequence:
          - service: notify.mobile_app_{{ notify_device }}
            data:
              title: Dog Feeding Reminder
              message: "The dog needs to be fed in the morning!"
              data:
                actions:
                  - action: FEED_DOG
                    title: Mark as Fed

      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'time' and now().time() == strptime(evening_time, '%H:%M:%S').time() }}"
        sequence:
          - service: notify.mobile_app_{{ notify_device }}
            data:
              title: Dog Feeding Reminder
              message: "The dog needs to be fed in the evening!"
              data:
                actions:
                  - action: FEED_DOG
                    title: Mark as Fed

  - alias: "Handle NFC Tag Scan"
    condition:
      condition: template
      value_template: "{{ trigger.platform == 'event' and trigger.event.event_type == 'tag_scanned' }}"
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.last_fed
        data:
          timestamp: "{{ now().timestamp() }}"

  - alias: "Handle Notification Action"
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: FEED_DOG

    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.last_fed
        data:
          timestamp: "{{ now().timestamp() }}"
